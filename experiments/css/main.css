@charset "UTF-8";
/* ==========================================================================
   INUITCSS
   ========================================================================== */
/**
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/**
 * This is an example inuitcss manifest file. DO NOT MODIFY THIS FILE DIRECTLY.
 * Instead, copy and paste it into your own CSS directory and make additions,
 * extensions, and modifications there.
 */
/**
 * CONTENTS
 *
 * SETTINGS
 * Config...............Project-level configuration and feature switches.
 * Core.................inuitcss’ core and setup settings.
 * Global...............Project-wide variables and settings.
 *
 * TOOLS
 * Rem..................Tools for converting pixel inputs into their rem
 *                      equivalents.
 * Font-size............A mixin which guarantees baseline-friendly line-heights.
 * Clearfix.............Micro clearfix mixin.
 * Hidden...............Mixin for hiding elements.
 * Sass MQ..............inuitcss’ default media query manager.
 *
 * GENERIC
 * Box-sizing...........Better default `box-sizing`.
 * Normalize.css........A level playing field using @necolas’ Normalize.css.
 * Reset................A tiny reset to complement Normalize.css.
 * Shared...............Sensibly and tersely share some global commonalities
 *                      (particularly useful when managing vertical rhythm).
 *
 * ELEMENTS
 * Page.................Set up our document’s default `font-size` and
 *                      `line-height`.
 * Headings.............Very minimal (i.e. only font-size information) for
 *                      headings 1 through 6.
 * Images...............Base image styles.
 * Tables...............Simple table styles.
 *
 * OBJECTS
 * Wrapper..............Page constraint object.
 * Layout...............Generic layout module.
 * Media................Image- and text-like content side by side. The
 *                      poster-child of OOCSS.
 * Flag.................Table-layout-based advancement on the Media object.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........A list whose items all site in a line.
 * Box..................Simple boxing abstraction.
 * Block................Image-on-top-of-text object.
 * Ratio................A container for maintaining aspect ratio of content.
 * Crop.................Provide a cropping context for media (images, etc.).
 * Tables...............Classes for manipulating `table`s.
 * Pack.................Pack items into available horizontal space.
 *
 * COMPONENTS
 * Buttons..............An example button component, and how it fits into the
 *                      inuitcss framework.
 *
 * UTILITIES
 * Clearfix.............Bind our clearfix onto a utility class.
 * Widths...............Simple width helper classes.
 * Headings.............Reassigning our heading styles to helper classes.
 * Spacing..............Nudge bits of the DOM around with these spacing
 *                      classes.
 * Print................Reset-like styles taken from the HTML5 Boilerplate.
 * Hide.................Helper classes to hide content
 */
/* dark blue */
/* yellow */
/* pink temp!!! */
/* pink */
/* pink */
/* gray */
body:before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100; }
  @media (min-width: 47.9375em) {
    body:before {
      content: "tablet ≥ 767px (47.9375em)"; } }
  @media (min-width: 75em) {
    body:before {
      content: "desktop ≥ 1200px (75em)"; } }
  @media (min-width: 85.625em) {
    body:before {
      content: "wide ≥ 1370px (85.625em)"; } }

/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */
/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* ==========================================================================
   #RESET
   ========================================================================== */
/**
 * A very simple reset that sits on top of Normalize.css.
 */
body,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, dd, ol, ul,
figure,
hr,
fieldset, legend {
  margin: 0;
  padding: 0; }

/**
 * Remove trailing margins from nested lists.
 */
li > ol,
li > ul {
  margin-bottom: 0; }

/**
 * Remove default table spacing.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* ==========================================================================
   #SHARED
   ========================================================================== */
/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
/* stylelint-disable selector-list-comma-newline-after */
address,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre
dl, ol, ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 1.5rem; }

/**
 * Consistent indentation for lists.
 */
dd, ol, ul {
  margin-left: 1.5rem; }

/* stylelint-enable selector-list-comma-newline-after */
/* ==========================================================================
   #PAGE
   ========================================================================== */
/**
 * Simple page-level setup.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  color: red; }

@media (max-width: 47.9275em) {
  html {
    font-size: 0.75em; } }

@media (min-width: 47.9375em) {
  html {
    font-size: calc(0.00663 * 100vw + 6.91211px); } }

@media (min-width: 85.625em) {
  html {
    font-size: 1em; } }

/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Simple default styles for headings 1 through 6. Anything more opinionated
 * than simple font-size changes should likely be applied via classes (see:
 * http://csswizardry.com/2016/02/managing-typography-on-large-apps/).
 */
h1 {
  font-size: 2.25rem;
  line-height: 1.33333; }

h2 {
  font-size: 1.75rem;
  line-height: 1.71429; }

h3 {
  font-size: 1.5rem;
  line-height: 1; }

h4 {
  font-size: 1.25rem;
  line-height: 1.2; }

h5 {
  font-size: 1.125rem;
  line-height: 1.33333; }

h6 {
  font-size: 1rem;
  line-height: 1.5; }

/* ==========================================================================
   #IMAGES
   ========================================================================== */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
img[width],
img[height] {
  /* [1] */
  max-width: none; }

/* ==========================================================================
   #TABLES
   ========================================================================== */
/**
 * 1. Ensure tables fill up as much space as possible.
 */
table {
  width: 100%;
  /* [1] */ }

/* ==========================================================================
   #WRAPPERS
   ========================================================================== */
/**
 * Page-level constraining and wrapping elements.
 */
/* mine */
/* stylelint-disable */
/* stylelint-enable */
.o-wrapper {
  padding-right: 24px;
  padding-left: 24px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1600px;
  position: relative;
  /* mine */ }
  .o-wrapper:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }

/* Size variants.
   ========================================================================== */
.o-wrapper--tiny {
  padding-right: 6px;
  padding-left: 6px; }

.o-wrapper--small {
  padding-right: 12px;
  padding-left: 12px; }

.o-wrapper--large {
  padding-right: 48px;
  padding-left: 48px; }

.o-wrapper--huge {
  padding-right: 96px;
  padding-left: 96px; }

/* ==========================================================================
   #GRID - Flexbox based grid system
   ========================================================================== */
.o-grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin-left: -24px;
  padding: 0; }
  .o-grid > .o-grid__item {
    padding-left: 24px;
    -ms-flex: 1;
        flex: 1;
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    max-width: 100%; }
    .o-grid > .o-grid__item--top {
      -ms-flex-item-align: start;
          align-self: flex-start; }
    .o-grid > .o-grid__item--bottom {
      -ms-flex-item-align: end;
          align-self: flex-end; }
    .o-grid > .o-grid__item--center {
      -ms-flex-item-align: center;
          align-self: center; }
    .o-grid > .o-grid__item--flex-none {
      -ms-flex: none;
          flex: none; }
  .o-grid--bottom {
    -ms-flex-align: end;
        -ms-grid-row-align: flex-end;
        align-items: flex-end; }
  .o-grid--center {
    -ms-flex-align: center;
        -ms-grid-row-align: center;
        align-items: center; }
  .o-grid--justify-left {
    -ms-flex-pack: start;
        justify-content: start; }
  .o-grid--justify-center {
    -ms-flex-pack: center;
        justify-content: center; }
  .o-grid--center {
    -ms-flex-align: center;
        -ms-grid-row-align: center;
        align-items: center; }
  .o-grid--vertical {
    -ms-flex-direction: column;
        flex-direction: column; }
  .o-grid--justified {
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap; }
    .o-grid--justified > .o-grid__item {
      -ms-flex: none;
          flex: none; }
  .o-grid--no-gutters {
    margin: 0; }
    .o-grid--no-gutters > .o-grid__item {
      padding: 0; }
  .o-grid--tiny {
    margin-left: -6px; }
    .o-grid--tiny > .o-grid__item {
      padding-left: 6px; }
  .o-grid--small {
    margin-left: -12px; }
    .o-grid--small > .o-grid__item {
      padding-left: 12px; }
  .o-grid--large {
    margin-left: -48px; }
    .o-grid--large > .o-grid__item {
      padding-left: 48px; }
  .o-grid--huge {
    margin-left: -96px; }
    .o-grid--huge > .o-grid__item {
      padding-left: 96px; }
  .o-grid--flexCells > .o-grid__item {
    display: -ms-flexbox;
    display: flex; }
  .o-grid--no-flex {
    overflow: auto;
    /* or hidden when there are arrows?? */ }
    .o-grid--no-flex > .o-grid__item {
      -ms-flex: none;
          flex: none; }

/*
  mobile = s
  tablet = md
  desktop = lg
  wide = xl
*/
@media (max-width: 47.9275em) {
  .m-1\/2\@s > .o-grid__item {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
    max-width: 50%; } }

@media (min-width: 47.9375em) {
  .m-1\/2\@md > .o-grid__item {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
    max-width: 50%; }
  .m-1\/3\@md > .o-grid__item {
    -ms-flex-preferred-size: 33.333%;
        flex-basis: 33.333%;
    max-width: 33.333%; } }

@media (min-width: 47.9375em) and (orientation: landscape) {
  .m-1\/2\@md > .o-grid__item {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
    max-width: 50%; }
  .m-1\/3\@md > .o-grid__item {
    -ms-flex-preferred-size: 33.333%;
        flex-basis: 33.333%;
    max-width: 33.333%; }
  .m-1\/4\@md > .o-grid__item {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%;
    max-width: 25%; } }

@media (min-width: 75em) {
  .m-1\/3\@lg > .o-grid__item {
    -ms-flex-preferred-size: 33.333%;
        flex-basis: 33.333%;
    max-width: 33.333%; }
  .m-1\/4\@lg > .o-grid__item {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%;
    max-width: 25%; } }

@media (min-width: 85.625em) {
  .m-1\/4\@xl > .o-grid__item {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%;
    max-width: 25%; }
  .m-1\/5\@xl > .o-grid__item {
    -ms-flex-preferred-size: 20%;
        flex-basis: 20%;
    max-width: 20%; } }

/* ==========================================================================
   #MEDIA
   ========================================================================== */
/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.o-media {
  display: block; }
  .o-media:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }

.o-media__img {
  float: left;
  margin-right: 24px; }
  .o-media__img > img {
    display: block; }

.o-media__body {
  overflow: hidden;
  display: block; }
  .o-media__body,
  .o-media__body > :last-child {
    margin-bottom: 0; }

/* Size variants
   ========================================================================== */
/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */
.o-media--tiny > .o-media__img {
  margin-right: 6px; }

.o-media--tiny.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 6px; }

.o-media--small > .o-media__img {
  margin-right: 12px; }

.o-media--small.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 12px; }

.o-media--large > .o-media__img {
  margin-right: 48px; }

.o-media--large.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 48px; }

.o-media--huge > .o-media__img {
  margin-right: 96px; }

.o-media--huge.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 96px; }

/* Reversed media objects
   ========================================================================== */
.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px; }

/* Gutterless media objects
   ========================================================================== */
.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0; }

/* ==========================================================================
   #FLAG
   ========================================================================== */
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image.
 *
 * http://csswizardry.com/2013/05/the-flag-object/
 *
 * 1. Allows us to control vertical alignments.
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.o-flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
   * Items within a flag object. There should only ever be one of each.
   *
   * 1. Default to aligning content to their middles.
   */
.o-flag__img,
.o-flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
   * Flag images have a space between them and the body of the object.
   *
   * 1. Force `.flag__img` to take up as little space as possible:
   *    https://pixelsvsbytes.com/2012/02/this-css-layout-grid-is-no-holy-grail/
   */
.o-flag__img {
  width: 1px;
  /* [1] */
  padding-right: 24px;
  /**
     * 1. Fixes problem with images disappearing.
     */ }
  .o-flag__img > img {
    max-width: none;
    /* [1] */ }

/**
   * The container for the main content of the flag object.
   *
   * 1. Forces the `.flag__body` to take up all remaining space.
   */
.o-flag__body {
  width: auto;
  /* [1] */ }
  .o-flag__body,
  .o-flag__body > :last-child {
    margin-bottom: 0; }

/* Size variants.
   ========================================================================== */
.o-flag--tiny > .o-flag__img {
  padding-right: 6px; }

.o-flag--tiny.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 6px; }

.o-flag--small > .o-flag__img {
  padding-right: 12px; }

.o-flag--small.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 12px; }

.o-flag--large > .o-flag__img {
  padding-right: 48px; }

.o-flag--large.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 48px; }

.o-flag--huge > .o-flag__img {
  padding-right: 96px; }

.o-flag--huge.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 96px; }

.o-flag--flush > .o-flag__img {
  padding-right: 0;
  padding-left: 0; }

/* Reversed flag.
   ========================================================================== */
/**
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */
.o-flag--reverse {
  direction: rtl;
  /* [1] */ }
  .o-flag--reverse > .o-flag__img,
  .o-flag--reverse > .o-flag__body {
    direction: ltr;
    /* [2] */ }
  .o-flag--reverse > .o-flag__img {
    padding-right: 0;
    /* [3] */
    padding-left: 24px;
    /* [3] */ }

/* Alignment variants.
   ========================================================================== */
/**
 * Vertically align the image- and body-content differently. Defaults to middle.
 */
.o-flag--top > .o-flag__img,
.o-flag--top > .o-flag__body {
  vertical-align: top; }

.o-flag--bottom > .o-flag__img,
.o-flag--bottom > .o-flag__body {
  vertical-align: bottom; }

/* ==========================================================================
   #LIST-BARE
   ========================================================================== */
/**
 * Strip list-like appearance from lists by removing their bullets, and any
 * indentation.
 */
.o-list-bare {
  list-style: none;
  margin-left: 0; }

/* ==========================================================================
   #LIST-INLINE
   ========================================================================== */
/**
 * The list-inline object simply displays a list of items in one line.
 */
.o-list-inline {
  margin-left: 0;
  list-style: none; }

.o-list-inline__item {
  display: inline-block; }

/* Delimited list.
   ========================================================================== */
/**
 * By default, applying this class will comma separate your list items. You can
 * change the delimiter by predefining the following variable:
 */
.o-list-inline--delimited {
  font-size: 0; }
  .o-list-inline--delimited > .o-list-inline__item {
    font-size: 1rem; }
  .o-list-inline--delimited > .o-list-inline__item + .o-list-inline__item:before {
    content: ", "; }

/* ==========================================================================
   #BOX
   ========================================================================== */
/**
 * The box object simply boxes off content. Extend with cosmetic styles in the
 * Components layer.
 *
 * 1. So we can apply the `.o-box` class to naturally-inline elements.
 */
.o-box {
  display: block;
  /* [1] */
  padding: 24px; }
  .o-box:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }
  .o-box > :last-child {
    margin-bottom: 0; }

/* Size variants
   ========================================================================== */
.o-box--flush {
  padding: 0; }

.o-box--tiny {
  padding: 6px; }

.o-box--small {
  padding: 12px; }

.o-box--large {
  padding: 48px; }

.o-box--huge {
  padding: 96px; }

/* ==========================================================================
   #BLOCK
   ========================================================================== */
/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.o-block {
  display: block;
  text-align: center; }

.o-block__img {
  margin-bottom: 24px;
  /* Size variants.
       ====================================================================== */ }
  .o-block--flush > .o-block__img {
    margin-bottom: 0; }
  .o-block--tiny > .o-block__img {
    margin-bottom: 6px; }
  .o-block--small > .o-block__img {
    margin-bottom: 12px; }
  .o-block--large > .o-block__img {
    margin-bottom: 48px; }
  .o-block--huge > .o-block__img {
    margin-bottom: 96px; }

.o-block__body {
  display: block; }

/* Alignment variants.
   ========================================================================== */
.o-block--right {
  text-align: right; }

.o-block--left {
  text-align: left; }

/* ==========================================================================
   #RATIO
   ========================================================================== */
/**
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * http://alistapart.com/article/creating-intrinsic-ratios-for-video
 *
 * 1. Default cropping is a 1:1 ratio (i.e. a perfect square).
 */
.o-ratio {
  position: relative;
  display: block;
  overflow: hidden; }
  .o-ratio:before {
    content: "";
    display: block;
    width: 100%;
    padding-bottom: 100%;
    /* [1] */ }

.o-ratio__content,
.o-ratio > iframe,
.o-ratio > embed,
.o-ratio > object {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%; }

/* stylelint-disable */
/* Ratio variants.
   ========================================================================== */
/**
 * Generate a series of ratio classes to be used like so:
 *
 *   <div class="o-ratio  o-ratio--16:9">
 *
 */
.o-ratio--2\:1:before {
  padding-bottom: 50%; }

.o-ratio--4\:3:before {
  padding-bottom: 75%; }

.o-ratio--7\:5:before {
  padding-bottom: 71.42857%; }

.o-ratio--16\:9:before {
  padding-bottom: 56.25%; }

/* stylelint-enable */
/* ==========================================================================
   #CROP
   ========================================================================== */
/**
 * Provide a cropping container in order to display media (usually images)
 * cropped to certain ratios.
 *
 * 1. Set up a positioning context in which the image can sit.
 * 2. This is the crucial part: where the cropping happens.
 */
.o-crop {
  position: relative;
  /* [1] */
  display: block;
  overflow: hidden;
  /* [2] */ }

/**
   * Apply this class to the content (usually `img`) that needs cropping.
   *
   * 1. Image’s default positioning is top-left in the cropping box.
   * 2. Make sure the media doesn’t stop itself too soon.
   */
.o-crop__content {
  position: absolute;
  top: 0;
  /* [1] */
  left: 0;
  /* [1] */
  max-width: none;
  /* [2] */ }

/**
   * We can position the media in different locations within the cropping area.
   */
.o-crop__content--right {
  right: 0;
  left: auto; }

.o-crop__content--bottom {
  top: auto;
  bottom: 0; }

.o-crop__content--center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }

/* stylelint-disable */
/* Crop-ratio variants.
   ========================================================================== */
/**
 * Generate a series of crop classes to be used like so:
 *
 *   <div class="o-crop  o-crop--16:9">
 *
 */
.o-crop--2\:1 {
  padding-bottom: 50%; }

.o-crop--4\:3 {
  padding-bottom: 75%; }

.o-crop--16\:9 {
  padding-bottom: 56.25%; }

/* stylelint-enable */
/* ==========================================================================
   #TABLES
   ========================================================================== */
/**
 * A simple object for manipulating the structure of HTML `table`s.
 */
.o-table {
  width: 100%; }

/* Equal-width table cells.
   ========================================================================== */
/**
 * `table-layout: fixed` forces all cells within a table to occupy the same
 * width as each other. This also has performance benefits: because the browser
 * does not need to (re)calculate cell dimensions based on content it discovers,
 * the table can be rendered very quickly. Further reading:
 * https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout#Values
 */
.o-table--fixed {
  table-layout: fixed; }

/* Size variants.
   ========================================================================== */
.o-table--tiny th,
.o-table--tiny td {
  padding: 6px; }

.o-table--small th,
.o-table--small td {
  padding: 12px; }

.o-table--large th,
.o-table--large td {
  padding: 48px; }

.o-table--huge th,
.o-table--huge td {
  padding: 96px; }

/* ==========================================================================
   #PACK
   ========================================================================== */
/**
 * The pack object simply causes any number of elements pack up horizontally to
 * automatically fill an equal, fluid width of their parent.
 *
 * 1. Fill all available space.
 * 2. Remove any leftover styling from lists.
 * 3. Cause children to be automatically equally sized.
 */
.o-pack {
  width: 100%;
  /* [1] */
  margin-left: 0;
  /* [2] */
  display: table;
  table-layout: fixed;
  /* [3] */ }

/**
   * 1. Cause children to adopt table-like structure.
   */
.o-pack__item {
  display: table-cell;
  /* [1] */
  /* Vertical alignment variants.
       ====================================================================== */ }
  .o-pack--middle > .o-pack__item {
    vertical-align: middle; }
  .o-pack--bottom > .o-pack__item {
    vertical-align: bottom; }

/* Unequal-width items.
   ========================================================================== */
.o-pack--auto {
  table-layout: auto; }

/* Size variants.
   ========================================================================== */
.o-pack--tiny {
  border-spacing: 6px; }

.o-pack--small {
  border-spacing: 12px; }

.o-pack--large {
  border-spacing: 48px; }

.o-pack--huge {
  border-spacing: 96px; }

/* Reversed order packs
   ========================================================================== */
.o-pack--rev {
  direction: rtl; }
  .o-pack--rev > .o-pack__item {
    direction: ltr; }

.o-icon, [class*="o-icon--"] {
  /* Allows sizing by changing the icon’s font-size */
  width: 1em;
  height: 1em;
  fill: #fff;
  /* default color */
  color: #fff;
  /* default color when currentColor is used */
  font-size: 2em;
  /* default-size */
  text-align: center;
  padding-right: 0.1em;
  /* to override this - use utility class ?? */
  vertical-align: middle;
  box-sizing: content-box;
  overflow: hidden;
  pointer-events: none;
  /* TODO: decide whether to use .ie .o-icon {} selector for this */ }
  .is-active .o-icon, .is-active [class*="o-icon--"] {
    fill: #112268; }

.o-icon {
  /* use utility positioning classes instead */ }
  .o-icon--small {
    font-size: 1.3em; }
  .o-icon--medium {
    font-size: 1.7em; }
  .o-icon--large {
    font-size: 2.4em; }
  .o-icon--colored {
    fill: #112268; }
    .is-active .o-icon--colored {
      fill: #fff; }
    .c-tab .o-icon--colored {
      transition: all 0.3s; }
  .o-icon--inverted {
    color: #112268; }
  .o-icon--bordered {
    stroke: #112268; }
  .o-icon--primary {
    fill: #ec028d; }
  .o-icon--secondary {
    fill: #fdd941; }
    .is-active .o-icon--secondary {
      fill: #112268; }

.c-input {
  /* By default this component refers to a text input */
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  .c-input--search {
    padding: 0.5em 1em;
    background: #999; }
  .c-input__input {
    border-radius: 0.375em;
    background: #fff;
    color: currentColor;
    border: 0.15em solid #fff;
    padding: 0.5em;
    width: 100%; }
    .c-input__input:focus {
      border: 0.15em solid #112268;
      outline: none; }
  .c-input__label {
    padding-bottom: 0.5em; }
  .c-input__msg {
    padding-top: 0.5em;
    -ms-flex-item-align: end;
        align-self: flex-end; }
    .has-error .c-input__msg {
      color: #ec028d; }
  .c-input.has-error .c-input__input {
    border-color: #ec028d; }

/* ==========================================================================
   #BUTTONS
   ========================================================================== */
/**
 * This is an example component. Extend inuitcss by building your own components
 * that make up your UI. Component classes are prefixed with a `c-`.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */
/* c-btn base styles */
.c-btn, [class*="c-btn--"] {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  padding: 0.1em 0.5em;
  transition: 0.33333s;
  border-radius: 0.375em;
  border: .15em solid transparent;
  /* mine */
  text-decoration: none;
  /* mine */
  font-size: 1em;
  /* ems here! */ }
  .c-btn[disabled], [class*="c-btn--"][disabled] {
    opacity: 0.5; }
  .c-btn.is-active, [class*="c-btn--"].is-active {
    background: #fdd941;
    color: #112268; }
  @media (min-width: 47.9375em) {
    .c-btn:active, .c-btn:focus, [class*="c-btn--"]:active, [class*="c-btn--"]:focus {
      border: .15em solid #eee;
      /* mine */
      outline: none;
      /* mine */ } }

.c-btn {
  /* Style variants
     ========================================================================== */
  /* Size variants
     ========================================================================== */ }
  .c-btn--primary {
    color: #fff;
    background-color: #ec028d;
    width: 100%;
    font-size: 1.5em;
    padding: 0.5em; }
    @media (min-width: 47.9375em) {
      .c-btn--primary:hover:not([disabled]), .c-btn--primary:focus {
        background-color: #fd24a5; } }
  .c-btn--secondary {
    color: #112268;
    background-color: #fdd941;
    width: 100%;
    font-size: 1.5em;
    padding: 0.5em; }
    @media (min-width: 47.9375em) {
      .c-btn--secondary:hover:not([disabled]), .c-btn--secondary:focus {
        background-color: #fee373; } }
  .c-btn--text {
    background: none;
    border: none;
    color: currentColor; }
  .c-btn__link {
    text-decoration: underline; }
  .c-btn--inline {
    width: auto;
    font-size: 1em;
    padding: .1em 2em; }
  .c-btn--icon {
    padding: .4em; }
  .c-btn--split {
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    width: auto;
    font-size: 1em;
    padding: 0 0 0 0.8em;
    border-radius: 0.5em; }
  .c-btn__counter {
    color: #fdd941;
    padding-left: 0.8em; }
  .c-btn--small {
    padding: 0.1875em 0.5625em;
    font-size: 0.8em; }
  .c-btn--large {
    padding: 0.75em 2.25em;
    font-size: 1.6em; }

/* Ghost buttons
   ========================================================================== */
/**
 * Ghost buttons have see-through backgrounds and are bordered.
 */
.c-checkable, [class*="c-checkable--"] {
  position: relative;
  display: inline-block; }

.c-checkable__input {
  display: none; }

.c-checkable__input:checked + [class*="o-icon"] {
  color: #112268; }

.c-checkable__input ~ label {
  padding-left: 2.2em;
  /* needs refactoring? */
  /* the following is optional - I find the 'auto' selection here a bit annoying */
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.c-checkable--terms {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  font-size: 1.3rem;
  /* less than optimal - but it does the job */ }
  .c-checkable--terms .terms__label {
    height: 2em;
    padding-left: 2.5em; }

.c-checkable--small {
  font-size: 0.8em; }

.c-checkable--large {
  font-size: 1.6em; }

.c-checkable__label-wpr {
  -ms-flex: 1;
      flex: 1;
  font-size: 0.9rem; }

.c-header, [class*="c-header--"] {
  font-size: 1.3rem;
  padding: 0 1em;
  height: 4rem;
  color: #112268;
  background: #f1f2f7;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

.c-header--main {
  height: 5rem;
  font-size: 1.5rem; }

.c-header__text {
  font-size: 1em;
  /* override h2 element style */
  display: inline-block;
  margin: 0 auto 0 0.5em;
  /* override default h2 element margin bottom (auto right margin is to space the flex-items) */ }

.c-header--colored {
  /* generally used in tabs */
  color: #fff;
  background: #112268; }

.c-header--inverted {
  /* generally used in popups */
  color: #112268;
  background: #fff; }

[class*="c-link"] {
  color: currentColor;
  text-decoration: underline;
  cursor: pointer;
  display: inline-block; }

.c-link--no-deco {
  text-decoration: none; }

.c-link--icon {
  padding-left: 2em;
  /* use when icon is position absolute and pointer is need on icon as well */ }

.c-tab {
  font-size: 1.3rem;
  padding: 0 1em;
  height: 4rem;
  color: #112268;
  background: #f1f2f7;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  text-transform: uppercase;
  margin-bottom: 0.2em; }
  .c-tab.is-active {
    background: #112268;
    color: #fff;
    /* not the best solution because we break i/o priinciple
    (we change the meaning icon--colored based on context), but
    maybe the most pragmatic */ }
    .c-tab.is-active .o-icon--colored {
      color: #112268;
      fill: #fdd941;
      transform: rotateX(180deg); }

.c-card {
  background: url(../images/promo.jpeg) no-repeat;
  background-size: cover;
  font-size: 1rem;
  margin-bottom: 1rem;
  border: 1px solid #112268;
  /* not sure if this is according to design....but without it - the promo looks weird */ }

.c-caption {
  font-size: 1rem;
  color: #fdd941;
  background: #112268;
  padding: 0.5em;
  text-transform: uppercase;
  width: 100%;
  position: absolute;
  top: 0; }
  @media (min-width: 47.9375em) {
    .c-caption {
      top: auto;
      bottom: 0; } }
  .c-caption--inline {
    /* generally used in card component */
    font-size: .9rem;
    color: #112268;
    background: #f1f2f7;
    padding: 0.5em 1em 0.5em 0.5em;
    text-transform: none;
    border-radius: 0 1em 0 0;
    font-weight: bold;
    width: auto;
    bottom: 0;
    top: auto; }
    @media (min-width: 47.9375em) {
      .c-caption--inline {
        transform: translateY(-100%); } }

.c-footer {
  position: relative;
  background: #112268;
  color: #fff;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: stretch;
      align-items: stretch; }
  .c-footer__item {
    padding: 0.5em;
    color: #fff;
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center; }
  .c-footer__item--spacer {
    margin-right: auto; }
  .c-footer__item--right {
    background: #fdd941;
    color: #112268;
    margin-left: 1em;
    position: relative; }

/* ==========================================================================
   #CLEARFIX
   ========================================================================== */
/**
 * Attach our clearfix mixin to a utility class.
 */
.u-clearfix:after {
  content: "" !important;
  display: block !important;
  clear: both !important; }

/* ==========================================================================
   #WIDTHS
   ========================================================================== */
/**
 * inuitcss generates a series of utility classes that give a fluid width to
 * whichever element they’re applied, e.g.:
 *
 *   <img src="" alt="" class="u-1/2" />
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item  u-1/2">
 *
 * By default, inuitcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item  u-1/1  u-1/2@tablet  u-1/3@desktop">
 *
 * Optionally, inuitcss can generate offset classes which can push and pull
 * elements left and right by a specified amount, e.g.:
 *
 *   <div class="o-layout__item  u-2/3  u-pull-1/3">
 *
 * This is useful for making very granular changes to the rendered order of
 * items in a layout.
 *
 * N.B. This option is turned off by default.
 */
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
 * your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$inuit-fractions` list.
 */
.u-1\/1 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important; }

.u-1\/2 {
  -ms-flex-preferred-size: 50% !important;
      flex-basis: 50% !important; }

.u-2\/2 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important; }

.u-1\/3 {
  -ms-flex-preferred-size: 33.33333% !important;
      flex-basis: 33.33333% !important; }

.u-2\/3 {
  -ms-flex-preferred-size: 66.66667% !important;
      flex-basis: 66.66667% !important; }

.u-3\/3 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important; }

.u-1\/4 {
  -ms-flex-preferred-size: 25% !important;
      flex-basis: 25% !important; }

.u-2\/4 {
  -ms-flex-preferred-size: 50% !important;
      flex-basis: 50% !important; }

.u-3\/4 {
  -ms-flex-preferred-size: 75% !important;
      flex-basis: 75% !important; }

.u-4\/4 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important; }

.u-1\/5 {
  -ms-flex-preferred-size: 20% !important;
      flex-basis: 20% !important; }

.u-2\/5 {
  -ms-flex-preferred-size: 40% !important;
      flex-basis: 40% !important; }

.u-3\/5 {
  -ms-flex-preferred-size: 60% !important;
      flex-basis: 60% !important; }

.u-4\/5 {
  -ms-flex-preferred-size: 80% !important;
      flex-basis: 80% !important; }

.u-5\/5 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important; }

/**
 * If we’re using Sass-MQ, automatically generate grid system(s) for each of our
 * defined breakpoints, and give them a Responsive Suffix, e.g.:
 *
 * <div class="u-3/12@mobile">
 */
@media (min-width: 47.9375em) {
  .u-1\/1\@tablet {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/2\@tablet {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-2\/2\@tablet {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/3\@tablet {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important; }
  .u-2\/3\@tablet {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important; }
  .u-3\/3\@tablet {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/4\@tablet {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important; }
  .u-2\/4\@tablet {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-3\/4\@tablet {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important; }
  .u-4\/4\@tablet {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/5\@tablet {
    -ms-flex-preferred-size: 20% !important;
        flex-basis: 20% !important; }
  .u-2\/5\@tablet {
    -ms-flex-preferred-size: 40% !important;
        flex-basis: 40% !important; }
  .u-3\/5\@tablet {
    -ms-flex-preferred-size: 60% !important;
        flex-basis: 60% !important; }
  .u-4\/5\@tablet {
    -ms-flex-preferred-size: 80% !important;
        flex-basis: 80% !important; }
  .u-5\/5\@tablet {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; } }

@media (min-width: 75em) {
  .u-1\/1\@desktop {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/2\@desktop {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-2\/2\@desktop {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/3\@desktop {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important; }
  .u-2\/3\@desktop {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important; }
  .u-3\/3\@desktop {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/4\@desktop {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important; }
  .u-2\/4\@desktop {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-3\/4\@desktop {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important; }
  .u-4\/4\@desktop {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/5\@desktop {
    -ms-flex-preferred-size: 20% !important;
        flex-basis: 20% !important; }
  .u-2\/5\@desktop {
    -ms-flex-preferred-size: 40% !important;
        flex-basis: 40% !important; }
  .u-3\/5\@desktop {
    -ms-flex-preferred-size: 60% !important;
        flex-basis: 60% !important; }
  .u-4\/5\@desktop {
    -ms-flex-preferred-size: 80% !important;
        flex-basis: 80% !important; }
  .u-5\/5\@desktop {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; } }

@media (min-width: 85.625em) {
  .u-1\/1\@wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/2\@wide {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-2\/2\@wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/3\@wide {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important; }
  .u-2\/3\@wide {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important; }
  .u-3\/3\@wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/4\@wide {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important; }
  .u-2\/4\@wide {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important; }
  .u-3\/4\@wide {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important; }
  .u-4\/4\@wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; }
  .u-1\/5\@wide {
    -ms-flex-preferred-size: 20% !important;
        flex-basis: 20% !important; }
  .u-2\/5\@wide {
    -ms-flex-preferred-size: 40% !important;
        flex-basis: 40% !important; }
  .u-3\/5\@wide {
    -ms-flex-preferred-size: 60% !important;
        flex-basis: 60% !important; }
  .u-4\/5\@wide {
    -ms-flex-preferred-size: 80% !important;
        flex-basis: 80% !important; }
  .u-5\/5\@wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important; } }

/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Redefine all of our basic heading styles against utility classes so as to
 * allow for double stranded heading hierarchy, e.g. we semantically need an H2,
 * but we want it to be sized like an H1:
 *
 *   <h2 class="u-h1"></h2>
 *
 */
.u-h1 {
  font-size: 2.25rem !important;
  line-height: 1.33333 !important; }

.u-h2 {
  font-size: 1.75rem !important;
  line-height: 1.71429 !important; }

.u-h3 {
  font-size: 1.5rem !important;
  line-height: 1 !important; }

.u-h4 {
  font-size: 1.25rem !important;
  line-height: 1.2 !important; }

.u-h5 {
  font-size: 1.125rem !important;
  line-height: 1.33333 !important; }

.u-h6 {
  font-size: 1rem !important;
  line-height: 1.5 !important; }

/* ==========================================================================
   #SPACING
   ========================================================================== */
/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-[margin|padding]-[top|bottom|left|right]?-[none|tiny|small|large|huge]
 */
/* stylelint-disable string-quotes */
.u-padding {
  padding: 24px !important; }

.u-padding-tiny {
  padding: 6px !important; }

.u-padding-small {
  padding: 12px !important; }

.u-padding-large {
  padding: 48px !important; }

.u-padding-huge {
  padding: 96px !important; }

.u-padding-none {
  padding: 0 !important; }

.u-padding-top {
  padding-top: 24px !important; }

.u-padding-top-tiny {
  padding-top: 6px !important; }

.u-padding-top-small {
  padding-top: 12px !important; }

.u-padding-top-large {
  padding-top: 48px !important; }

.u-padding-top-huge {
  padding-top: 96px !important; }

.u-padding-top-none {
  padding-top: 0 !important; }

.u-padding-right {
  padding-right: 24px !important; }

.u-padding-right-tiny {
  padding-right: 6px !important; }

.u-padding-right-small {
  padding-right: 12px !important; }

.u-padding-right-large {
  padding-right: 48px !important; }

.u-padding-right-huge {
  padding-right: 96px !important; }

.u-padding-right-none {
  padding-right: 0 !important; }

.u-padding-bottom {
  padding-bottom: 24px !important; }

.u-padding-bottom-tiny {
  padding-bottom: 6px !important; }

.u-padding-bottom-small {
  padding-bottom: 12px !important; }

.u-padding-bottom-large {
  padding-bottom: 48px !important; }

.u-padding-bottom-huge {
  padding-bottom: 96px !important; }

.u-padding-bottom-none {
  padding-bottom: 0 !important; }

.u-padding-left {
  padding-left: 24px !important; }

.u-padding-left-tiny {
  padding-left: 6px !important; }

.u-padding-left-small {
  padding-left: 12px !important; }

.u-padding-left-large {
  padding-left: 48px !important; }

.u-padding-left-huge {
  padding-left: 96px !important; }

.u-padding-left-none {
  padding-left: 0 !important; }

.u-margin {
  margin: 24px !important; }

.u-margin-tiny {
  margin: 6px !important; }

.u-margin-small {
  margin: 12px !important; }

.u-margin-large {
  margin: 48px !important; }

.u-margin-huge {
  margin: 96px !important; }

.u-margin-none {
  margin: 0 !important; }

.u-margin-top {
  margin-top: 24px !important; }

.u-margin-top-tiny {
  margin-top: 6px !important; }

.u-margin-top-small {
  margin-top: 12px !important; }

.u-margin-top-large {
  margin-top: 48px !important; }

.u-margin-top-huge {
  margin-top: 96px !important; }

.u-margin-top-none {
  margin-top: 0 !important; }

.u-margin-right {
  margin-right: 24px !important; }

.u-margin-right-tiny {
  margin-right: 6px !important; }

.u-margin-right-small {
  margin-right: 12px !important; }

.u-margin-right-large {
  margin-right: 48px !important; }

.u-margin-right-huge {
  margin-right: 96px !important; }

.u-margin-right-none {
  margin-right: 0 !important; }

.u-margin-bottom {
  margin-bottom: 24px !important; }

.u-margin-bottom-tiny {
  margin-bottom: 6px !important; }

.u-margin-bottom-small {
  margin-bottom: 12px !important; }

.u-margin-bottom-large {
  margin-bottom: 48px !important; }

.u-margin-bottom-huge {
  margin-bottom: 96px !important; }

.u-margin-bottom-none {
  margin-bottom: 0 !important; }

.u-margin-left {
  margin-left: 24px !important; }

.u-margin-left-tiny {
  margin-left: 6px !important; }

.u-margin-left-small {
  margin-left: 12px !important; }

.u-margin-left-large {
  margin-left: 48px !important; }

.u-margin-left-huge {
  margin-left: 96px !important; }

.u-margin-left-none {
  margin-left: 0 !important; }

/* stylelint-enable string-quotes */
/* ==========================================================================
   #PRINT
   ========================================================================== */
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/5.3.0/dist/doc/css.md#print-styles
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L205-L282
 */
@media print {
  /**
   * 1. Black prints faster: http://www.sanbeiji.com/archives/953
   */
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* [1] */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /**
   * Don't show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /**
   * Printing Tables: http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/* ==========================================================================
   #HIDE
   ========================================================================== */
/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important; }

/**
 * Hide visually and from screen readers.
 */
.u-hidden {
  display: none !important; }

@media (max-width: 47.9275em) {
  .u-hidden--mobile {
    display: none !important; } }

@media (min-width: 47.9375em) and (max-width: 74.99em) {
  .u-hidden--tablet {
    display: none !important; } }

@media (min-width: 75em) {
  .u-hidden--desktop {
    display: none !important; } }

/* misc utilities - still needs some thought */
.u-margin-auto {
  margin: auto; }

.u-margin-left-auto {
  margin-left: auto; }

.u-align-left {
  text-align: left; }

.u-align-right {
  text-align: right; }

.u-relative {
  position: relative; }

.u-inline-block {
  display: inline-block; }

.u-reset-case {
  text-transform: none; }

.u-absolute-center {
  margin: auto;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0; }

.u-absolute-top {
  top: 0; }

.u-absolute-bottom {
  bottom: 0; }

.u-absolute-left {
  left: 0;
  top: 0;
  bottom: 0;
  margin: auto; }

.u-absolute-right {
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto; }

[class*="u-absolute"] {
  position: absolute !important; }

@font-face {
  font-family: "Headline";
  src: url("../fonts/headline-regular.woff") format("woff"); }

.style-guide {
  font-family: "Headline",sans-serif;
  color: #112268;
  margin: 0 auto;
  max-width: 100em; }
  .style-guide > .o-box {
    margin: 2em;
    background: #f1f2f7; }
    .style-guide > .o-box.dark {
      color: #f1f2f7;
      background: #112268; }
  .style-guide > .c-header, .style-guide [class*="c-header--"] {
    margin: 2rem; }

hr {
  margin-top: 2rem; }

.paletteWpr.paletteWpr {
  background: #fff; }

.palette {
  color: #fff; }
  .palette div {
    min-height: 40px; }
  .palette .o-grid__item > div {
    padding: 1em; }

.primaryColor {
  background: #4a5ab1;
  height: 160px; }

.textColor-light {
  background: #23337e; }

.textColor {
  background: #112268; }

.secondaryColor {
  background: #fdd941;
  height: 160px; }

.actionColor-light {
  background: #fa25a4; }

.actionColor {
  background: #ec028d; }

.grayColor.grayColor.grayColor {
  background: #f1f2f7;
  height: 160px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  padding: 0;
  color: #050a1e; }

.grayColor > div:first-child {
  margin: auto; }

.white {
  background: #fff; }

.grayColor-dark {
  background: #dadce9; }

.blackColor {
  background: #050a1e; }

h1, h2, h3, h4, h5, h6 {
  text-transform: uppercase;
  margin-top: 2rem; }

/* media queries examples */
html {
  color: #333; }

body {
  margin: 0; }

main {
  display: -ms-flexbox;
  display: flex;
  overflow: hidden; }

a {
  color: inherit; }

main > section {
  position: relative;
  min-height: 100vh;
  padding: 2rem; }

.popup {
  background: #f1f2f7;
  -ms-flex: 0 0 100vw;
      flex: 0 0 100vw;
  display: none;
  -ms-flex-order: 5;
      order: 5; }
  .popup:target {
    display: block;
    -ms-flex-order: -1;
        order: -1; }

.menu {
  -ms-flex: 0 0 30vw;
      flex: 0 0 30vw;
  background: aqua; }
  .menu:target ~ .page {
    transform: translateX(0); }

.page {
  transform: translateX(-30vw);
  background: orange;
  -ms-flex: 0 0 100vw;
      flex: 0 0 100vw;
  transition: transform 0.3s; }
  .page:target ~ .popup {
    display: none; }

.login {
  -ms-flex: 0 0 30vw;
      flex: 0 0 30vw;
  -ms-flex-order: 1;
      order: 1;
  z-index: -1;
  transform: translateX(-60vw);
  background: salmon; }
  .login:target {
    z-index: 0; }
    .login:target ~ .page {
      transform: translateX(-60vw); }

.c-input {
  margin-bottom: 2rem; }

.c-input__input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

.c-header--colored {
  position: -webkit-sticky;
  position: sticky;
  top: 0; }
